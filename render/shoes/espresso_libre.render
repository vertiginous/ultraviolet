--- 
name: Espresso Libre
line: 
  begin: ""
  end: "\"\\n\","
tags: 
- begin: span([
  end: |
    ], :stroke => rgb(0, 102, 255), :emphasis => 'italic'),

  selector: comment
- begin: span([
  end: |
    ], :stroke => rgb(67, 168, 237), :weight => 'bold'),

  selector: keyword, storage
- begin: span([
  end: |
    ], :stroke => rgb(68, 170, 67)),

  selector: constant.numeric
- begin: span([
  end: |
    ], :stroke => rgb(197, 101, 107), :weight => 'bold'),

  selector: constant
- begin: span([
  end: |
    ], :stroke => rgb(88, 92, 246), :weight => 'bold'),

  selector: constant.language
- begin: span([
  end: |
    ], :stroke => rgb(49, 132, 149)),

  selector: variable.language, variable.other
- begin: span([
  end: |
    ], :stroke => rgb(4, 155, 10)),

  selector: string
- begin: span([
  end: |
    ], :stroke => rgb(47, 228, 32)),

  selector: constant.character.escape, string source
- begin: span([
  end: |
    ], :stroke => rgb(26, 146, 28)),

  selector: meta.preprocessor
- begin: span([
  end: |
    ], :stroke => rgb(154, 255, 135), :weight => 'bold'),

  selector: keyword.control.import
- begin: span([
  end: |
    ], :stroke => rgb(255, 147, 88), :weight => 'bold'),

  selector: entity.name.function, keyword.other.name-of-parameter.objc
- begin: span([
  end: |
    ], :underline => 'single'),

  selector: entity.name.type
- begin: span([
  end: |
    ], :emphasis => 'italic'),

  selector: entity.other.inherited-class
- begin: span([
  end: |
    ], :emphasis => 'italic'),

  selector: variable.parameter
- begin: span([
  end: |
    ], :stroke => rgb(139, 142, 156)),

  selector: storage.type.method
- begin: span([
  end: |
    ], :emphasis => 'italic'),

  selector: meta.section entity.name.section, declaration.section entity.name.section
- begin: span([
  end: |
    ], :stroke => rgb(114, 144, 217), :weight => 'bold'),

  selector: support.function
- begin: span([
  end: |
    ], :stroke => rgb(109, 121, 222), :weight => 'bold'),

  selector: support.class, support.type
- begin: span([
  end: |
    ], :stroke => rgb(0, 175, 14), :weight => 'bold'),

  selector: support.constant
- begin: span([
  end: |
    ], :stroke => rgb(47, 95, 224), :weight => 'bold'),

  selector: support.variable
- begin: span([
  end: |
    ], :stroke => rgb(104, 118, 135)),

  selector: keyword.operator.js
- begin: span([
  end: |
    ], :stroke => rgb(255, 255, 255)),

  selector: invalid
- begin: span([
  end: |
    ]),

  selector: invalid.deprecated.trailing-whitespace
- begin: span([
  end: |
    ]),

  selector: text source, string.unquoted
- begin: span([
  end: |
    ], :stroke => rgb(143, 126, 101)),

  selector: meta.tag.preprocessor.xml
- begin: span([
  end: |
    ], :stroke => rgb(136, 136, 136)),

  selector: meta.tag.sgml.doctype
- begin: span([
  end: |
    ], :emphasis => 'italic'),

  selector: string.quoted.docinfo.doctype.DTD
- begin: span([
  end: |
    ], :stroke => rgb(67, 168, 237)),

  selector: meta.tag, declaration.tag
- begin: span([
  end: |
    ], :weight => 'bold'),

  selector: entity.name.tag
- begin: span([
  end: |
    ], :emphasis => 'italic'),

  selector: entity.other.attribute-name
listing: 
  begin: |
    background(rgb(42, 33, 28) ,:curve => 12)
    para( [

  end: "] , :fill => rgb(42, 33, 28), :stroke => rgb(189, 174, 157), :size => 'xx-small', :font => 'Bitstream Vera Sans Mono')"
document: 
  begin: |
    stack(:margin => 4 ){

  end: "}"
filter: "@escaped.inspect + \", \" "
line-numbers: 
  begin: span("
  end: "\", :fill => rgb(42, 33, 28), :stroke => rgb(189, 174, 157) ),"
