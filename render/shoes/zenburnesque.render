--- 
name: Zenburnesque
line: 
  begin: ""
  end: "\"\\n\","
tags: 
- begin: span([
  end: |
    ], :stroke => rgb(112, 144, 112), :emphasis => 'italic'),

  selector: comment
- begin: span([
  end: |
    ], :weight => 'bold'),

  selector: keyword.other.directive
- begin: span([
  end: |
    ], :underline => 'single'),

  selector: keyword.other.directive.line-number
- begin: span([
  end: |
    ], :stroke => rgb(255, 128, 128)),

  selector: constant.character
- begin: span([
  end: |
    ], :stroke => rgb(255, 32, 32)),

  selector: string
- begin: span([
  end: |
    ], :stroke => rgb(34, 192, 255)),

  selector: constant.numeric
- begin: span([
  end: |
    ], :underline => 'single'),

  selector: constant.numeric.floating-point
- begin: span([
  end: |
    ]),

  selector: constant.language
- begin: span([
  end: |
    ]),

  selector: constant.character, constant.other
- begin: span([
  end: |
    ]),

  selector: variable.parameter, variable.other
- begin: span([
  end: |
    ], :stroke => rgb(255, 255, 160)),

  selector: keyword
- begin: span([
  end: |
    ], :stroke => rgb(255, 128, 0), :weight => 'bold'),

  selector: entity.name.module,  support.other.module
- begin: span([
  end: |
    ], :stroke => rgb(255, 255, 160)),

  selector: keyword.operator
- begin: span([
  end: |
    ], :underline => 'single'),

  selector: source.ocaml keyword.operator.symbol.infix.floating-point
- begin: span([
  end: |
    ], :underline => 'single'),

  selector: source.ocaml keyword.operator.symbol.prefix.floating-point
- begin: span([
  end: |
    ], :stroke => rgb(96, 128, 255)),

  selector: storage.type
- begin: span([
  end: |
    ], :stroke => rgb(64, 128, 160)),

  selector: entity.name.class.variant
- begin: span([
  end: |
    ]),

  selector: storage
- begin: span([
  end: |
    ], :stroke => rgb(240, 144, 64)),

  selector: entity.name.type
- begin: span([
  end: |
    ]),

  selector: entity.other.inherited-class
- begin: span([
  end: |
    ], :stroke => rgb(255, 204, 102), :weight => 'bold'),

  selector: entity.name.function
- begin: span([
  end: |
    ], :stroke => rgb(255, 224, 0)),

  selector: storage.type.user-defined
- begin: span([
  end: |
    ], :stroke => rgb(244, 160, 32)),

  selector: entity.name.type.class.type
- begin: span([
  end: |
    ]),

  selector: variable.parameter
- begin: span([
  end: |
    ]),

  selector: entity.name.tag
- begin: span([
  end: |
    ]),

  selector: entity.other.attribute-name
- begin: span([
  end: |
    ]),

  selector: support.function
- begin: span([
  end: |
    ]),

  selector: support.constant
- begin: span([
  end: |
    ]),

  selector: support.type, support.class
- begin: span([
  end: |
    ]),

  selector: support.variable
- begin: span([
  end: |
    ]),

  selector: invalid
listing: 
  begin: |
    background(rgb(64, 64, 64) ,:curve => 12)
    para( [

  end: "] , :fill => rgb(64, 64, 64), :stroke => rgb(222, 222, 222), :size => 'xx-small', :font => 'Bitstream Vera Sans Mono')"
document: 
  begin: |
    stack(:margin => 4 ){

  end: "}"
filter: "@escaped.inspect + \", \" "
line-numbers: 
  begin: span("
  end: "\", :fill => rgb(64, 64, 64), :stroke => rgb(222, 222, 222) ),"
